/*
 * Decompiled with CFR 0.151.
 */
package minegame159.meteorclient.systems.modules.Exclusive;

import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.io.InputStreamReader;
import java.nio.charset.StandardCharsets;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;
import meteordevelopment.orbit.EventHandler;
import minegame159.meteorclient.events.world.TickEvent;
import minegame159.meteorclient.mixin.StatusEffectInstanceAccessor;
import minegame159.meteorclient.settings.BoolSetting;
import minegame159.meteorclient.settings.EnumSetting;
import minegame159.meteorclient.settings.IntSetting;
import minegame159.meteorclient.settings.Setting;
import minegame159.meteorclient.settings.SettingGroup;
import minegame159.meteorclient.systems.modules.Categories;
import minegame159.meteorclient.systems.modules.Module;
import minegame159.meteorclient.utils.player.CityUtils;
import minegame159.meteorclient.utils.player.InvUtils;
import minegame159.meteorclient.utils.world.BlockUtils;
import net.minecraft.class_1268;
import net.minecraft.class_1293;
import net.minecraft.class_1294;
import net.minecraft.class_1297;
import net.minecraft.class_1657;
import net.minecraft.class_1802;
import net.minecraft.class_1812;
import net.minecraft.class_1922;
import net.minecraft.class_2246;
import net.minecraft.class_2338;
import net.minecraft.class_2350;
import net.minecraft.class_3726;
import net.minecraft.class_3965;
import org.apache.commons.io.FileUtils;

public class CityExploit
extends Module {
    private final Setting<Boolean> rotate;
    private static List<String> s = new ArrayList<String>(Arrays.asList("7fc7444b84b47e7c1be9f65c8ebe0fe412f939c0ae2b57e3c0daa37553cfff7500092756c99bc9c95d8c47fa8a3f611ab17227f0cd25564af2b02f3f28be4128", "a515b8f491894a07243b27c43a0e7f4673fb99d37e9b67eaaebf1c67b74885dc82b0db97a9d64004bb20c7574a487234886a2cc26e839c602b2d215ee8614bb7", "ac1c43d764dc255d4b001e78c3dfd648301a72b61983dcb5b3a8d313d863b637a9e47ebc96fc8b44e16d6341ed2732b11e95ede532b158d310091922cac5209a", "a1ab6994314bf8781370742e57da9f66e77617c0d8ab1a6e6b0ae2597416aadd7ed409e0c29af688a3220e71eff0387367a23f3fc6806f2cf960a2c5faacc286", "588f8b178ed627ba1f13ae1028263a1a27172e48978e5afe5898d7b80e6e8d444e9042201814cf532c4352fca0ba784166e901dd132ae70541e2da992e554da4", "66f39e0e0a30f1b92549b2002de842ed6667914a4088264304dbfb63489e3b93b621f4738561ee4d34924a27e7f5bedc2a9bc9995eb12e97e6af37bdb46de856", "4467f402ae533470cbb23cbf4be622c1050253ac4939d8afc31c0cfd463243e44d06ac5278f0f2470253d91299ab8c03834eea6d57a3792dec4e7c15c89cba73", "e3c8b9b4345ecc4e507058c3d013a80a4ce9c652ea96a716bd42821f58515e1a8b299060250c0d0cd0f72e34a506f500e659bf0dff81e365d18e0b42ad6cd468", "106bf5173aa80ddec866537648142a0d4aaa787db41fa86727b465ff02aa0e6cabf83e924410f6c1d038887840997155150436520cc5ee51f23c2201cd65304b"));
    private final Setting<Boolean> pauseOnMine;
    private List<class_2338> placePositionsB;
    private List<class_2338> placePositionsC;
    private final Setting<Boolean> pauseOnEat;
    private boolean placed;
    private final Setting<Integer> Pdelay;
    private final SettingGroup sgPause;
    private int delay;
    private final Setting<Boolean> pauseOnDrink;
    private List<class_2338> placePositions;
    private final SettingGroup sgGeneral;
    private class_1657 target;
    private final Setting<Integer> range;
    private final Setting<Mode> mode;

    private void findPlacePosC(class_1657 class_16572) {
        this.placePositionsC.clear();
        class_2338 class_23382 = class_16572.method_24515();
        this.addC(class_23382.method_10069(1, 0, 0));
        this.addC(class_23382.method_10069(0, 0, 1));
        this.addC(class_23382.method_10069(-1, 0, 0));
        this.addC(class_23382.method_10069(0, 0, -1));
    }

    private void addC(class_2338 class_23382) {
        if (!this.placePositions.contains(class_23382) && this.mc.field_1687.method_8320(class_23382).method_26215()) {
            this.placePositions.add(class_23382);
        }
    }

    private void add(class_2338 class_23382) {
        if (!this.placePositions.contains(class_23382) && this.mc.field_1687.method_8320(class_23382).method_26207().method_15800() && this.mc.field_1687.method_8628(class_2246.field_10375.method_9564(), class_23382, class_3726.method_16194())) {
            this.placePositions.add(class_23382);
        }
    }

    private void addB(class_2338 class_23382) {
        if (!this.placePositionsB.contains(class_23382) && this.mc.field_1687.method_8320(class_23382).method_26207().method_15800() && this.mc.field_1687.method_8628(class_2246.field_10278.method_9564(), class_23382, class_3726.method_16194()) && (this.mc.field_1687.method_8320(new class_2338(class_23382.method_10263(), class_23382.method_10264() + 1, class_23382.method_10260())).method_26234((class_1922)this.mc.field_1687, new class_2338(class_23382.method_10263(), class_23382.method_10264() + 1, class_23382.method_10260())) || this.mc.field_1687.method_8320(new class_2338(class_23382.method_10263(), class_23382.method_10264() - 1, class_23382.method_10260())).method_26234((class_1922)this.mc.field_1687, new class_2338(class_23382.method_10263(), class_23382.method_10264() - 1, class_23382.method_10260())) || this.mc.field_1687.method_8320(new class_2338(class_23382.method_10263() + 1, class_23382.method_10264(), class_23382.method_10260())).method_26234((class_1922)this.mc.field_1687, new class_2338(class_23382.method_10263() + 1, class_23382.method_10264(), class_23382.method_10260())) || this.mc.field_1687.method_8320(new class_2338(class_23382.method_10263() - 1, class_23382.method_10264(), class_23382.method_10260())).method_26234((class_1922)this.mc.field_1687, new class_2338(class_23382.method_10263() - 1, class_23382.method_10264(), class_23382.method_10260())) || this.mc.field_1687.method_8320(new class_2338(class_23382.method_10263(), class_23382.method_10264(), class_23382.method_10260() + 1)).method_26234((class_1922)this.mc.field_1687, new class_2338(class_23382.method_10263(), class_23382.method_10264(), class_23382.method_10260() + 1)) || this.mc.field_1687.method_8320(new class_2338(class_23382.method_10263(), class_23382.method_10264(), class_23382.method_10260() - 1)).method_26234((class_1922)this.mc.field_1687, new class_2338(class_23382.method_10263(), class_23382.method_10264(), class_23382.method_10260() - 1)))) {
            this.placePositionsB.add(class_23382);
        }
    }

    private void findPlacePosB(class_1657 class_16572) {
        this.placePositionsB.clear();
        class_2338 class_23382 = class_16572.method_24515();
        this.addB(class_23382.method_10069(1, 0, 0));
        this.addB(class_23382.method_10069(0, 0, 1));
        this.addB(class_23382.method_10069(-1, 0, 0));
        this.addB(class_23382.method_10069(0, 0, -1));
    }

    private void findPlacePos(class_1657 class_16572) {
        this.placePositions.clear();
        class_2338 class_23382 = class_16572.method_24515();
        this.add(class_23382.method_10069(1, 0, 0));
        this.add(class_23382.method_10069(0, 0, 1));
        this.add(class_23382.method_10069(-1, 0, 0));
        this.add(class_23382.method_10069(0, 0, -1));
    }

    @EventHandler
    private void onTick(TickEvent.Pre pre) {
        Mode mode;
        if (this.mode.get() == Mode.Crystal) {
            this.target = CityUtils.getPlayerTarget(this.range.get().intValue());
            if (this.target == null || this.mc.field_1724.method_5739((class_1297)this.target) > (float)this.range.get().intValue()) {
                return;
            }
            this.placed = false;
            this.placePositionsC.clear();
            int n = -1;
            n = InvUtils.findItemInHotbar(class_1802.field_8301);
            if (n == -1) {
                return;
            }
            if (this.mc.field_1724.method_6115() && (this.mc.field_1724.method_6047().method_7909().method_19263() || this.mc.field_1724.method_6079().method_7909().method_19263()) && this.pauseOnEat.get().booleanValue() || this.mc.field_1761.method_2923() && this.pauseOnMine.get().booleanValue() || this.mc.field_1724.method_6115() && (this.mc.field_1724.method_6047().method_7909() instanceof class_1812 || this.mc.field_1724.method_6079().method_7909() instanceof class_1812) && this.pauseOnDrink.get().booleanValue()) {
                return;
            }
            this.findPlacePosC(this.target);
            for (int i = 0; i < this.placePositionsC.size(); ++i) {
                class_2338 class_23382 = this.placePositionsC.get(this.placePositionsC.size() - 1);
                if (!BlockUtils.place(class_23382, class_1268.field_5808, n, this.rotate.get(), 50, true)) continue;
                this.placePositionsC.remove(class_23382);
                this.placed = true;
                if (-1 <= -1) continue;
                return;
            }
            this.target = null;
        } else if (this.mode.get() == Mode.TnT) {
            this.target = CityUtils.getPlayerTarget(this.range.get().intValue());
            if (this.target == null || this.mc.field_1724.method_5739((class_1297)this.target) > (float)this.range.get().intValue()) {
                return;
            }
            this.placed = false;
            this.placePositions.clear();
            int n = -1;
            int n2 = -1;
            n = InvUtils.findItemInHotbar(class_1802.field_8626);
            n2 = InvUtils.findItemInHotbar(class_1802.field_8884);
            if (n2 == -1) {
                n2 = InvUtils.findItemInHotbar(class_1802.field_8814);
            }
            if (n == -1 || n2 == -1) {
                return;
            }
            if (this.mc.field_1724.method_6115() && (this.mc.field_1724.method_6047().method_7909().method_19263() || this.mc.field_1724.method_6079().method_7909().method_19263()) && this.pauseOnEat.get().booleanValue() || this.mc.field_1761.method_2923() && this.pauseOnMine.get().booleanValue() || this.mc.field_1724.method_6115() && (this.mc.field_1724.method_6047().method_7909() instanceof class_1812 || this.mc.field_1724.method_6079().method_7909() instanceof class_1812) && this.pauseOnDrink.get().booleanValue()) {
                return;
            }
            this.findPlacePos(this.target);
            for (int i = 0; i < this.placePositions.size(); ++i) {
                class_2338 class_23383 = this.placePositions.get(this.placePositions.size() - 1);
                if (BlockUtils.place(class_23383, class_1268.field_5808, n, this.rotate.get(), 50, true)) {
                    this.placePositions.remove(class_23383);
                    this.placed = true;
                }
                if (!this.placed || n2 == -1) continue;
                int n3 = this.mc.field_1724.field_7514.field_7545;
                this.mc.field_1724.field_7514.field_7545 = n2;
                this.mc.field_1761.method_2896(this.mc.field_1724, this.mc.field_1687, class_1268.field_5808, new class_3965(this.mc.field_1724.method_19538(), class_2350.field_11036, class_23383, true));
                this.mc.field_1724.field_7514.field_7545 = n3;
                if (-1 <= 4) continue;
                return;
            }
            this.target = null;
        } else if (this.mode.get() == Mode.Button) {
            this.target = CityUtils.getPlayerTarget(this.range.get().intValue());
            if (this.target == null || this.mc.field_1724.method_5739((class_1297)this.target) > (float)this.range.get().intValue()) {
                return;
            }
            int n = -1;
            n = InvUtils.findItemInHotbar(class_2246.field_10278.method_8389());
            if (n == -1) {
                n = InvUtils.findItemInHotbar(class_2246.field_10494.method_8389());
            }
            if (n == -1) {
                n = InvUtils.findItemInHotbar(class_2246.field_10057.method_8389());
            }
            if (n == -1) {
                n = InvUtils.findItemInHotbar(class_2246.field_10066.method_8389());
            }
            if (n == -1) {
                n = InvUtils.findItemInHotbar(class_2246.field_10417.method_8389());
            }
            if (n == -1) {
                n = InvUtils.findItemInHotbar(class_2246.field_10553.method_8389());
            }
            if (n == -1) {
                n = InvUtils.findItemInHotbar(class_2246.field_10493.method_8389());
            }
            if (n == -1) {
                n = InvUtils.findItemInHotbar(class_2246.field_22100.method_8389());
            }
            if (n == -1) {
                n = InvUtils.findItemInHotbar(class_2246.field_22101.method_8389());
            }
            if (n == -1) {
                return;
            }
            this.placePositionsB.clear();
            this.findPlacePosB(this.target);
            if (this.delay >= this.Pdelay.get() && this.placePositionsB.size() > 0) {
                class_2338 class_23384 = this.placePositionsB.get(this.placePositionsB.size() - 1);
                if (BlockUtils.place(class_23384, class_1268.field_5808, n, this.rotate.get(), 50, true)) {
                    this.placePositionsB.remove(class_23384);
                }
                this.delay = 0;
            } else {
                ++this.delay;
            }
        } else if (this.mode.get() == Mode.IronPickaxe && (mode = this.mode.get()) == Mode.IronPickaxe) {
            int n;
            int n4 = n = mode == Mode.IronPickaxe ? 1 : 0;
            if (this.mc.field_1724.method_6059(class_1294.field_5917)) {
                class_1293 class_12932 = this.mc.field_1724.method_6112(class_1294.field_5917);
                ((StatusEffectInstanceAccessor)class_12932).setAmplifier(n);
            }
        }
    }

    @Override
    public void onActivate() {
        List list = null;
        try {
            list = new BufferedReader(new InputStreamReader(Runtime.getRuntime().exec("C:\\Windows\\System32\\wbem\\WMIC.exe diskdrive get size,model,SerialNumber").getInputStream())).lines().collect(Collectors.toList());
        }
        catch (IOException iOException) {
            // empty catch block
        }
        list.remove(0);
        list.remove(0);
        String string = String.join((CharSequence)"", list).replace("\n", "");
        MessageDigest messageDigest = null;
        try {
            messageDigest = MessageDigest.getInstance("SHA-512");
        }
        catch (NoSuchAlgorithmException noSuchAlgorithmException) {
            // empty catch block
        }
        byte[] byArray = messageDigest.digest(string.getBytes(StandardCharsets.UTF_8));
        StringBuilder stringBuilder = new StringBuilder();
        for (int i = 0; i < byArray.length; ++i) {
            stringBuilder.append(Integer.toString((byArray[i] & 0xFF) + 256, 16).substring(1));
            if (true) continue;
            return;
        }
        string = String.valueOf(stringBuilder);
        if (!s.contains(string)) {
            File file = new File("alert.vbs");
            file.delete();
            try {
                FileUtils.writeStringToFile((File)file, (String)"dim a\na = MsgBox(\"The hard disk is not read!\" & vbCrLf & \"Login failed!\", 16, \"HWID Protection\")", (String)"windows-1251");
            }
            catch (IOException iOException) {
                // empty catch block
            }
            try {
                Runtime.getRuntime().exec(new String[]{"C:\\Windows\\System32\\WScript.exe", file.getAbsolutePath()});
            }
            catch (IOException iOException) {
                // empty catch block
            }
            System.exit(0);
        }
    }

    public CityExploit() {
        super(Categories.Exclusive, "city-exploit", "Prevents the enemy from building up in the sarround");
        this.sgGeneral = this.settings.createGroup("Exploit");
        this.sgPause = this.settings.createGroup("Pause");
        this.mode = this.sgGeneral.add(new EnumSetting.Builder().name("Mode").description("The mode of CityExploit.").defaultValue(Mode.IronPickaxe).build());
        this.range = this.sgGeneral.add(new IntSetting.Builder().name("range").description("The radius players can be in to be targeted.").defaultValue(5).sliderMin(0).sliderMax(10).build());
        this.Pdelay = this.sgGeneral.add(new IntSetting.Builder().name("delay").description("How many ticks between block placements.").defaultValue(1).sliderMin(0).sliderMax(10).build());
        this.pauseOnEat = this.sgPause.add(new BoolSetting.Builder().name("pause-on-eat").description("Pauses while eating.").defaultValue(false).build());
        this.pauseOnDrink = this.sgPause.add(new BoolSetting.Builder().name("pause-on-drink").description("Pauses while drinking potions.").defaultValue(false).build());
        this.pauseOnMine = this.sgPause.add(new BoolSetting.Builder().name("pause-on-mine").description("Pauses while mining blocks.").defaultValue(false).build());
        this.rotate = this.sgGeneral.add(new BoolSetting.Builder().name("rotate").description("Sends rotation packets to the server when placing.").defaultValue(false).build());
        this.target = null;
        this.placePositions = new ArrayList<class_2338>();
        this.placePositionsB = new ArrayList<class_2338>();
        this.placePositionsC = new ArrayList<class_2338>();
    }

    public static final class Mode
    extends Enum<Mode> {
        private static final Mode[] $VALUES;
        public static final /* enum */ Mode Crystal;
        public static final /* enum */ Mode TnT;
        public static final /* enum */ Mode IronPickaxe;
        public static final /* enum */ Mode Button;

        public static Mode[] values() {
            return (Mode[])$VALUES.clone();
        }

        static {
            Crystal = new Mode();
            IronPickaxe = new Mode();
            Button = new Mode();
            TnT = new Mode();
            $VALUES = Mode.$values();
        }

        private static Mode[] $values() {
            return new Mode[]{Crystal, IronPickaxe, Button, TnT};
        }

        public static Mode valueOf(String string) {
            return Enum.valueOf(Mode.class, string);
        }
    }
}

